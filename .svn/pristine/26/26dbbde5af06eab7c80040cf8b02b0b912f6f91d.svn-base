function [temp_smooth,grd] = roms_preprocess(fn,fntype,grdfn,depth,lon_w,lon_e,lat_s,lat_n,smooth_type,skip)
%%preprocess of ROMS data
% Input: 
% fn - Name of ROMS file (file paths included)
%   fntype - roms file type ('ini', 'avg', 'his', ...)
%   depth - depth that you want to detect front
%	lon_w,lon_e,lat_s,lat_n - domain boundary 
%   skip - grid interval number of field 'temp_zl'
%Output:
%   temp_zl - field extracted by function
%   grd - grid info 
%
%Get vertical coordinate informations
disp('Getting grid informations ...')
vc = fn_getvcinfo(fn);
%Get horizontal grid informations
[grd] = fn_getgrdinfo(grdfn,lon_w,lon_e,lat_s,lat_n,skip);
eta_ind=grd.eta_ind;
xi_ind=grd.xi_ind;
eta_len=grd.eta_len;
xi_len=grd.xi_len;
%get time stamp of ncfile and dumping to grd file
ocean_time=ncread(fn,'ocean_time'); 
date_start = ncreadatt(fn,'ocean_time','units');
S = regexp(date_start, '\s+', 'split');
date_string = [S{end-1},' ',S{end}];
d0=datenum(date_string,31);
d1=d0+ocean_time/3600/24;
grd.time=d1;
%
if strcmp(fntype,'ini')
%Read zeta,temperature/salinity, velocity from ROMS output
zeta = ncread(fn,'zeta',[xi_ind eta_ind 1],[xi_len eta_len 1],[skip skip 1]);
% fill_value = ncreadatt(fn,'zeta','_FillValue');
zeta(zeta>1e+9 | isnan(zeta)) = 0;
temp = ncread(fn,'temp',[xi_ind eta_ind 1 1],[xi_len eta_len Inf Inf],[skip skip 1 1]);
temp(temp>1e+9 | isnan(temp)) = 0;
elseif strcmp(fntype,'his')
    disp('to be finish')
end

%switch temp_extract method
temp_switch=2;
switch temp_switch
case 1
% Interpolate to given Z-level
temp_zl = roms3d_s2z(vc.s_rho,vc.Cs_r,vc.Tcline,zeta,grd.h,temp,depth);
case 2  
%saving time, extract SST
temp_zl = squeeze(temp(:,:,end));
end
% variable preprocess
sigma = 2;
N = 2;
fill_value = 0;
[temp_smooth] = variable_smooth(temp_zl,smooth_type,fill_value,sigma,N);    
end